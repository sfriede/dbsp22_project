<head><title>Entity 1</title></head>
<body>
<?php
	//open a connection to dbase server
        include 'open.php';


	//Override the PHP configuration file to display all errors
	//This is useful during development but generally disabled before release
	ini_set('error_reporting', E_ALL);
	ini_set('display_errors', true);

		   //prepare statements and call queries
			if ($stmt1 = $conn->prepare("CALL Query1()")) {

      			   //Run the actual query
      			   if ($stmt1->execute()) {

         		      //Store result set generated by the prepared statement
         		      $result1 = $stmt1->get_result();

         		      if (($result1) && ($result1->num_rows != 0)) {

                                 //construct an array in which we'll store our data
                                 $dataPointsTeacherSal = array();
				 $dataPointsUnemploy = array();
				 $dataPointsHomeless = array();

                               //Report result set by visiting each row in it
                               while ($row1 = $result1->fetch_row()) {
			       	     if (!is_null($row1[0])) {
                                     array_push($dataPointsTeacherSal, array("y"=> $row1[2], "x"=> $row1[0], "label"=>$row1[1]));
				     array_push($dataPointsUnemploy, array("y"=> $row1[3], "x"=> $row1[0], "label"=>$row1[1]));
                                     array_push($dataPointsHomeless, array("y"=> $row1[4], "x"=> $row1[0], "label"=>$row1[1]));
                                     }
				     }

         			} else {

				  if(!($result1)) {
				  	echo "Internal error: procedure failed";
				  }
				}
				  
                                  if(($result1)) {
                                        //We are done with the result set returned above, so free it
                                        $result1->free_result();
                                  }
				
			   	// close down prepared statement
      			      	$stmt1->close();
			} else {
		           //Call to execute failed, e.g. because server is no longer reachable,
         	      	   //or because supplied values are of the wrong type
         	      	   echo "Execute failed.<br>";
			}
		} else {
       		  //A problem occurred when preparing the statement; check for syntax errors
       		  //and misspelled attribute names in the statement string.
      		  echo "Prepare failed.<br>";
      		  $error = $conn->errno . ' ' . $conn->error;
      		  echo $error;
             	}
		     if ($stmt2 = $conn->prepare("CALL Query4Highschool()")) {

                           //Run the actual query
                           if ($stmt2->execute()) {

                              //Store result set generated by the prepared statement
                              $result2 = $stmt2->get_result();

                              if (($result2) && ($result2->num_rows != 0)) {
			      
                                 //construct an array in which we'll store our data
                                 $dataPointsHighschool = array();
                               //Report result set by visiting each row in it
                               while ($row2 = $result2->fetch_row()) {
                                     array_push($dataPointsHighschool, array("y"=> $row2[1], "label"=> $row2[0]));
                                 }

                                } else {

                                  if(!($result2)) {
                                        echo "Internal error: procedure failed";
                                  }
                                }

                                  if(($result2)) {
                                        //We are done with the result set returned above, so free it
                                        $result2->free_result();
                                  }

                                // close down prepared statement
                                $stmt2->close();
                        } else {
                           //Call to execute failed, e.g. because server is no longer reachable,
                           //or because supplied values are of the wrong type
                           echo "Execute failed.<br>";
                        }
                } else {
                  //A problem occurred when preparing the statement; check for syntax errors
                  //and misspelled attribute names in the statement string.
                  echo "Prepare failed.<br>";
                  $error = $conn->errno . ' ' . $conn->error;
                  echo $error;
                }

                           if ($stmt3 = $conn->prepare("CALL Query4College()")) {

                           //Run the actual query
                           if ($stmt3->execute()) {

                              //Store result set generated by the prepared statement
                              $result3 = $stmt3->get_result();

                              if (($result3) && ($result3->num_rows != 0)) {
			        //construct an array in which we'll store our data
                                 $dataPointsCollege = array();
                               //Report result set by visiting each row in it
                               while ($row3 = $result3->fetch_row()) {
                                     array_push($dataPointsCollege, array("y"=> $row3[1], "label"=> $row3[0]));
                                 }

                                } else {

                                  if(!($result3)) {
                                        echo "Internal error: procedure failed";
                                  }
                                }

                                  if(($result3)) {
                                        //We are done with the result set returned above, so free it
                                        $result3->free_result();
                                  }

                                // close down prepared statement
                                $stmt3->close();
                        } else {
                           //Call to execute failed, e.g. because server is no longer reachable,
                           //or because supplied values are of the wrong type
                           echo "Execute failed.<br>";
                        }
                } else {
                  //A problem occurred when preparing the statement; check for syntax errors
                  //and misspelled attribute names in the statement string.
                  echo "Prepare failed.<br>";
                  $error = $conn->errno . ' ' . $conn->error;
                  echo $error;
                }

                      
   // close the connection opened by open.php
   $conn->close();

?>
</body>

<html>
<head>
<script type="text/javascript">
window.onload = function () {
        var chart = new CanvasJS.Chart("container1", {
                animationEnabled: true,
                exportEnabled: true,
                theme: "light1", // "light1", "light2", "dark1", "dark2"
                title:{
                        text: "Average Teacher Starting Salary as a Function of Educational Score",
                        fontFamily: "verdana",
                        fontWeight: "bold",
			fontSize: 18,
                },
                data: [{
                        type: "line", //change type to column, bar, line, area, pie, etc
                        dataPoints: <?php echo json_encode($dataPointsTeacherSal, JSON_NUMERIC_CHECK); ?>,
                }],
                axisX:{
                        title:"Educational Score",
			        labelFormatter: function ( e ) {
               			return e.value;  
         		},
			interval: 0.05
                 },
                 axisY:{
                        title:"Average Teacher Starting Salary",
                 }

        });

        chart.render();
        var chart = new CanvasJS.Chart("container2", {
                animationEnabled: true,
                exportEnabled: true,
                theme: "light1", // "light1", "light2", "dark1", "dark2"
                title:{
                        text: "Unemployment Rate as a Function of Educational Score",
                        fontFamily: "verdana",
                        fontWeight: "bold",
			fontSize: 18,

                },
                data: [{
                        type: "line", //change type to column, bar, line, area, pie, etc
                        dataPoints: <?php echo json_encode($dataPointsUnemploy, JSON_NUMERIC_CHECK); ?>
                }],
		axisX:{
			title:"Educational Score",
			                    
                                labelFormatter: function ( e ) {
                                return e.value;
                        },
                        interval: 0.05

 		 },
		 axisY:{
			title:"Unemployment Rate",
 		 }
        });

        chart.render();
        var chart = new CanvasJS.Chart("container3", {
                animationEnabled: true,
                exportEnabled: true,
                theme: "light1", // "light1", "light2", "dark1", "dark2"
                title:{
                        text: "Percent of Population that is Homeless as a Function of Educational Score",
                        fontFamily: "verdana",
                        fontWeight: "bold",
			fontSize: 18,
                },
                data: [{
                        type: "line", //change type to column, bar, line, area, pie, etc
                        dataPoints: <?php echo json_encode($dataPointsHomeless, JSON_NUMERIC_CHECK); ?>
                }],
                axisX:{
                                title:"Educational Score",
                                labelFormatter: function ( e ) {
                                return e.value;
                        },
                        interval: 0.05

                 },
                 axisY:{
                        title:"Percent of Population that is Homeless",
                 }

        });
	chart.render();
	        var chart = new CanvasJS.Chart("container4", {
                animationEnabled: true,
                exportEnabled: true,
                theme: "light1", // "light1", "light2", "dark1", "dark2"
                title:{
                        text: "Median Income for Top 5 and Bottom 5 States in Terms of High School Graduation Rate",
                        fontFamily: "verdana",
                        fontWeight: "bold",
			fontSize: 18,
                },
                data: [{
                        type: "bar", //change type to column, bar, line, area, pie, etc
                        dataPoints: <?php echo json_encode($dataPointsHighschool, JSON_NUMERIC_CHECK); ?>
                }],
                axisX:{
                        title:"State",
                 },
                 axisY:{
                        title:"Median Income",
                 }

        });
        chart.render();
        var chart = new CanvasJS.Chart("container5", {
                animationEnabled: true,
                exportEnabled: true,
                theme: "light1", // "light1", "light2", "dark1", "dark2"
                title:{
                        text: "Median Income for Top 5 and Bottom 5 States in Terms of Percent of Population Completing College",
                        fontFamily: "verdana",
                        fontWeight: "bold",
			fontSize: 18,
                },
                data: [{
                        type: "bar", //change type to column, bar, line, area, pie, etc
                        dataPoints: <?php echo json_encode($dataPointsCollege, JSON_NUMERIC_CHECK); ?>
                }],
                axisX:{
                        title:"State",
                 },
                 axisY:{
                        title:"Median Income",
                 }

        });
        chart.render();

}
</script>
</head>
<body>
        <script type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
	<h3 style = "font-family: 'verdana'">  In order of best to worst-scored public education system (in terms of NAEP and standardized test scores), here is the unemployment rate, percent of population that is homeless, and the average starting salary of teachers for each state (for which educational data was available. </h3>
        <h5 style = "font-family: 'verdana'"> Educational Score = (Average SAT Score)/1600 + (Average ACT Score/36) + (NAEP Reading)/500 + (NAEP Math)/500 </h5>
	
        <div id="container1" style="height: 300px; width: 100%;display: inline-block;"></div>
        <div id="container2" style="height: 300px; width: 100%;display: inline-block;"></div>
	<div id="container3" style="height: 300px; width: 100%;display: inline-block;"></div>
        <h3 style = "font-family: 'verdana'">  See the average income for adults in the five states with the highest high school graduation rate and lowest high school graduation rate. The states are listed from lowest graduation rate to highest graduation rate from top to bottom. </h3>
        <div id="container4" style="height: 300px; width: 100%;display: inline-block;"></div>
        <h3 style = "font-family: 'verdana'">  See how this changes if we use percent of adults completing college instead. The states are listed from lowest percentage to highest percentage from top to bottom.</h3>
        <div id="container5" style="height: 300px; width: 100%;display: inline-block;"></div>


</body>
</html>