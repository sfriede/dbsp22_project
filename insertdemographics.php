<!-- Sydney Friedel and Shelby Coe -->
<!-- sfriede5 and scoe4 -->

<head><title>Insert Demographics</title></head>
<body>
<?php
	//open a connection to dbase server
        include 'open.php';


	//Override the PHP configuration file to display all errors
	//This is useful during development but generally disabled before release
	ini_set('error_reporting', E_ALL);
	ini_set('display_errors', true);

	//get user input and perform error-checking on it
	$state1 = $_POST['demographicsState'];
	$population = $_POST['demographicsPop'];
	$white = $_POST['white'];
   	$black = $_POST['black'];
    $asian = $_POST['asian'];
    $indigenous = $_POST['indigenous'];
    $other = $_POST['other'];
    $hispanicOrLatino = $_POST['hispanicOrLatino'];
    $notHispanicOrLatino = $_POST['notHispanicOrLatino'];





        $state1Valid = 0;

        //check state/territory provided
                if(!empty($state1)) {
                $state1 = trim($state1);
                if (strcmp($state1, 'Alabama') == 0 || strcmp($state1, 'Alaska') == 0 || strcmp($state1, 'Arizona') == 0 ||
                strcmp($state1, 'Arkansas') == 0 || strcmp($state1, 'California') == 0 || strcmp($state1, 'Colorado') == 0 ||
                strcmp($state1, 'Connecticut') == 0 || strcmp($state1, 'Delaware') == 0 || strcmp($state1, 'Flordia') == 0 ||
                strcmp($state1, 'Georgia') == 0 || strcmp($state1, 'Hawaii') == 0 || strcmp($state1, 'Idaho') == 0 ||
                strcmp($state1, 'Illinois') == 0 || strcmp($state1, 'Indiana') == 0 || strcmp($state1, 'Iowa') == 0 ||
                strcmp($state1, 'Kansas') == 0 || strcmp($state1, 'Kentucky') == 0 || strcmp($state1, 'Louisiana') == 0 ||
                strcmp($state1, 'Maine') == 0 || strcmp($state1, 'Maryland') == 0 || strcmp($state1, 'Massachusetts') == 0 ||
                strcmp($state1, 'Michigan') == 0 || strcmp($state1, 'Minnesota') == 0 || strcmp($state1, 'Mississippi') == 0 ||
                strcmp($state1, 'Missouri') == 0|| strcmp($state1, 'Montana') == 0 || strcmp($state1, 'Nebraska') == 0 ||
                strcmp($state1, 'Nevada') == 0 || strcmp($state1, 'New Hampshire') == 0 || strcmp($state1, 'New Jersey') == 0 ||
                strcmp($state1, 'New Mexico') == 0 || strcmp($state1, 'New York') == 0 || strcmp($state1, 'North Carolina') == 0 ||
                strcmp($state1, 'North Dakota') == 0 || strcmp($state1, 'Ohio') == 0 || strcmp($state1, 'Oklahoma') == 0 ||
                strcmp($state1, 'Oregon') == 0 || strcmp($state1, 'Pennsylvania') == 0 || strcmp($state1, 'Rhode Island') == 0 ||
                strcmp($state1, 'South Carolina') == 0 || strcmp($state1, 'South Dakota') == 0 || strcmp($state1, 'Tennessee') == 0 ||
                strcmp($state1, 'Texas') == 0 || strcmp($state1, 'Utah') == 0 || strcmp($state1, 'Vermont') == 0 ||
                strcmp($state1, 'Virginia') == 0 || strcmp($state1, 'Washington') == 0 || strcmp($state1, 'West Virginia') == 0 ||
                strcmp($state1, 'Wisconsin') == 0 || strcmp($state1,'Wyoming') == 0 || strcmp($state1, 'Washington DC') == 0 ||
                strcmp($state1, 'Puerto Rico') == 0 || strcmp($state1, 'Washington D.C.') == 0 || strcmp($state1, 'Guam') == 0 ||
                strcmp($state1, 'US Virgin Islands') == 0 ||  strcmp($state1, 'Northern Mariana Islands') == 0 ||
                strcmp($state1, 'American Samoa') == 0 ||  strcmp($state1, 'Midway Atoll') == 0 ||  strcmp($state1, 'Palmyra Atoll') == 0 ||
                strcmp($state1, 'Baker Island') == 0 ||  strcmp($state1,'Howland Island') == 0 ||  strcmp($state1, 'Jarvis Island') == 0 ||
                strcmp($state1, 'Johnston Atoll') == 0 ||  strcmp($state1, 'Kingman Reef') == 0 || strcmp($state1, 'Wake Island') == 0 ||
                strcmp($state1, 'Navassa Island') == 0) {

                                 $state1Valid = 1;
                                 }}


	$success = 0;
	
	if($state1Valid && isset($population) && isset($white) && isset($black) && isset($asian) && isset($indigenous) && isset($other) && isset($hispanicOrLatino) && isset($notHispanicOrLatino)) {

			   if ($stmt1 = $conn->prepare("CALL InsertDemographics(?, ?, ?, ?, ?, ?, ?, ?, ?)")) {
                           $stmt1->bind_param("siddddddd", $state1, $population, $white, $black, $asian, $indigenous, $other, $hispanicOrLatino, $notHispanicOrLatino);

                           //Run the actual query
                           if ($stmt1->execute()) {

                              //Store result set generated by the prepared statement
                              $result1 = $stmt1->get_result();
			      
			      //if there were no errors, the result should be empty. if a primary key or integrity constraint error
			      // occurred, it will be contained in the result
                              if (($result1) && ($result1->num_rows != 0)) {

                              //Create table to display results
                               echo "<table border=\"1px solid black\">";
                               echo "<tr><th> Error: Insertion Unsuccessful </th></tr>";

                               //Report result set by visiting each row in it
                               while ($row1 = $result1->fetch_row()) {
                                    echo "<tr>";
                                        echo "<td>".$row1[0]."</td>";
                                        echo "</tr>";
                                    }

                                     echo "</table>";

                                } else {

				  echo "Your record was successfully inserted into the Demographics table! See it in the table below";

				  $success = 1;
				}

			       if(($result1)) {
                                    //We are done with the result set returned above, so free it
                               	    $result1->free_result();    
			       }
                                // close down prepared statement
                                $stmt1->close();
				
                        } else {
                           //Call to execute failed, e.g. because server is no longer reachable,
                           //or because supplied values are of the wrong type
                           echo "Execute failed.<br>";
                        }
                } else {
                  //A problem occurred when preparing the statement; check for syntax errors
                  //and misspelled attribute names in the statement string.
                  echo "Prepare failed.<br>";
                  $error = $conn->errno . ' ' . $conn->error;
                  echo $error;
                }


	} else {

	  echo "Please ensure all parameters are set and the state/territory given is valid";
	}

	if($success == 1) {

		    if ($stmt2 = $conn->prepare("SELECT * FROM Demographics")) {
		    
		           //Run the actual query
                           if ($stmt2->execute()) {

                              //Store result set generated by the prepared statement
                              $result2 = $stmt2->get_result();
                             
                              
                              if (($result2) && ($result2->num_rows != 0)) {

                              //Create table to display results
                               echo "<table border=\"1px solid black\">";
			       echo "<tr><th>State</th><th>White</th><th>Black</th><th>Asian</th><th>Indigenous</th><th>Other</th><th>Hispanic or Latino</th><th>Not Hispanic or Latino</th></tr>";
                              //Report result set by visiting each row in it
                               while ($row2 = $result2->fetch_row()) {
                                    echo "<tr>";
                                        echo "<td>".$row2[0]."</td>";
				                        echo "<td>".$row2[1]."</td>";
                                        echo "<td>".$row2[2]."</td>";
                                        echo "<td>".$row2[3]."</td>";
                                        echo "<td>".$row2[4]."</td>";
                                        echo "<td>".$row2[5]."</td>";
                                        echo "<td>".$row2[6]."</td>";
                                        echo "<td>".$row2[7]."</td>";
                                        echo "</tr>";
                                    }

                                     echo "</table>";

                                }

		               if(($result2)) {
                               //We are done with the result set returned above, so free it
                                    $result2->free_result();
                               }
                                // close down prepared statement
                                $stmt2->close();

                        } else {
                           //Call to execute failed, e.g. because server is no longer reachable,
                           //or because supplied values are of the wrong type
                           echo "Execute failed.<br>";
                        }

		     } else {
                  //A problem occurred when preparing the statement; check for syntax errors
                  //and misspelled attribute names in the statement string.
                  echo "Prepare failed.<br>";
                  $error = $conn->errno . ' ' . $conn->error;
                  echo $error;
                }

	}
      
   // close the connection opened by open.php
   $conn->close();

?>
</body>

<html>
<body>
     <style>
        body {font-family: 'verdana'; font-size: 18px;}
     </style>

</body>
</html>
